name: Manually Label PRs

on:
  workflow_dispatch:
    inputs:
      maxCount:
        description: "Max number of PRs to process"
        required: false
        default: "200"
      scope:
        description: "Which PRs to consider: 'closed' or 'all'"
        required: false
        default: "closed"

concurrency:
  group: label-prs
  cancel-in-progress: false

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  collect_prs:
    runs-on: ubuntu-latest

    outputs:
      pr_numbers: ${{ steps.get_prs.outputs.pr_numbers }}
      pr_count: ${{ steps.get_prs.outputs.pr_count }}

    steps:
      - name: Get all closed PR numbers
        id: get_prs
        uses: actions/github-script@v7
        with:
          retries: 3
          script: |
            const maxCountRaw = process.env.INPUT_MAX_COUNT || "200";
            const maxCount = Math.max(0, Number.parseInt(maxCountRaw, 10) || 0);

            const scope = (process.env.INPUT_SCOPE || "closed").toLowerCase();
            const state = scope === "all" ? "all" : "closed";

            const allPRs = await github.paginate(github.rest.pulls.list, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state,
              per_page: 100
            });

            const prNumbersAll = allPRs.map(pr => pr.number).sort((a, b) => a - b);
            const prNumbers = maxCount > 0 ? prNumbersAll.slice(0, maxCount) : prNumbersAll;

            core.info(`Collected ${prNumbers.length} ${state} PRs (max ${maxCount || 'all'}): ${prNumbers.slice(0,20).join(", ")}...`);

            core.setOutput("pr_numbers", JSON.stringify(prNumbers));
            core.setOutput("pr_count", String(prNumbers.length));
        env:
          INPUT_MAX_COUNT: ${{ github.event.inputs.maxCount }}
          INPUT_SCOPE: ${{ github.event.inputs.scope }}

  label_prs_matrix:
    if: needs.collect_prs.outputs.pr_count != '0'
    needs: collect_prs

    runs-on: ubuntu-latest

    strategy:
      max-parallel: 10
      matrix:
        pr: ${{ fromJson(needs.collect_prs.outputs.pr_numbers) }}

    steps:
      - uses: actions/labeler@v5
        with:
          pr-number: ${{ matrix.pr }}
          configuration-path: .github/labeler.yml
          sync-labels: true
